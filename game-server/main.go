package main

import (
	"bytes"
	"game-server/models/game/response"
	"game-server/server"

	"github.com/rs/zerolog/log"
)

func main() {
	// test()
	srv := server.NewServer()
	err := srv.Start()
	if err != nil {
		log.Err(err)
	}
}

func test() {
	// testPacket := &game.PacketConnection{}
	// testPacket.GetDefault()
	// testPacket.Deserialize(bytes.NewBuffer(bigPacket.Buffer[4:]))
	// testPacket.DebugPrintAll()
	// buf := bytes.Buffer{}
	// testPacket.Serialize(&buf)

	// secondPacket := &game.PacketConnection{}
	// secondPacket.Deserialize(&buf)

	// secondPacket.DebugPrintAll()

	// bigData := []byte{0x00, 0x00, 0x00, 0x00, 0x8B, 0x00, 0x78, 0xDA, 0x8D, 0xCE, 0x41, 0x0A, 0x02, 0x31, 0x0C, 0x05, 0xD0, 0xBB, 0x64, 0x3D, 0x58, 0x2A, 0xB8, 0x18, 0x0F, 0xE0, 0xD2, 0x0B, 0x88, 0x94, 0xCC, 0x34, 0xD0, 0x42, 0xD2, 0x19, 0x9A, 0x08, 0xA2, 0xCC, 0xDD, 0x2D, 0x82, 0xBA, 0xB4, 0xAB, 0xFC, 0x6C, 0xDE, 0xFF, 0x97, 0x27, 0xAC, 0x68, 0x09, 0x8E, 0x80, 0xAA, 0x64, 0xEA, 0xE6, 0xA5, 0x18, 0x15, 0x73, 0xD9, 0x48, 0xD4, 0xC9, 0x12, 0xD5, 0x4D, 0x58, 0x2B, 0xF1, 0xE7, 0x86, 0x95, 0xFD, 0x21, 0xE4, 0x47, 0x12, 0xD4, 0x14, 0xBC, 0xDF, 0x8B, 0x04, 0x4B, 0x95, 0x30, 0x52, 0x0C, 0xE3, 0xDD, 0x8F, 0xBB, 0xE9, 0x56, 0x22, 0x13, 0x0C, 0x50, 0xE7, 0x1C, 0x9B, 0xDC, 0xD2, 0x29, 0x33, 0x9D, 0x51, 0xA8, 0x7D, 0x9D, 0x0A, 0x6C, 0x43, 0xC7, 0x34, 0x6D, 0x6E, 0x99, 0xA9, 0xFE, 0x52, 0x40, 0xE6, 0xAF, 0xFB, 0x2E, 0x51, 0xEB, 0xDA, 0xF5, 0x1F, 0x80, 0xED, 0xFA, 0x02, 0x69, 0x50, 0x6C, 0x00, 0x0A, 0x00, 0x78, 0xDA, 0x8B, 0x8E, 0x05, 0x00, 0x01, 0x15, 0x00, 0xB9, 0x01, 0x01, 0xBC, 0x00, 0x01, 0x00, 0x00, 0x00, 0xEF, 0x00, 0x78, 0xDA, 0xBD, 0x90, 0x4D, 0x6A, 0x03, 0x31, 0x0C, 0x46, 0xEF, 0xE2, 0x75, 0xE8, 0x90, 0x26, 0xD9, 0xE4, 0x00, 0x5D, 0xF6, 0x02, 0xA5, 0x08, 0xC5, 0x56, 0x26, 0x66, 0xFC, 0x57, 0x4B, 0x93, 0x96, 0x94, 0xDC, 0xBD, 0x0E, 0x38, 0xE9, 0x66, 0x60, 0x0C, 0x53, 0xBA, 0x92, 0x64, 0x3E, 0xDE, 0xF7, 0xF0, 0xDB, 0xB7, 0x4A, 0x28, 0x27, 0xB5, 0x57, 0xC8, 0x4C, 0xC2, 0x9D, 0x8E, 0x41, 0x28, 0x48, 0x67, 0x85, 0x3C, 0x77, 0x3E, 0x1A, 0xEE, 0x58, 0xA2, 0x1E, 0xEA, 0x80, 0x33, 0x69, 0x89, 0x19, 0x86, 0x6C, 0x99, 0x21, 0xC4, 0x00, 0xC7, 0xE8, 0x8C, 0x0D, 0x3D, 0xA0, 0xC1, 0x24, 0x94, 0x9F, 0x0E, 0x63, 0x30, 0x8E, 0xD4, 0x4A, 0x65, 0x6D, 0x4D, 0xE1, 0x96, 0xED, 0xC5, 0x3A, 0x7A, 0x45, 0x4F, 0xE5, 0x6A, 0x83, 0xA8, 0xEB, 0x6A, 0x91, 0x57, 0xB2, 0xE5, 0xD1, 0x01, 0xBB, 0x45, 0x62, 0x53, 0x94, 0x36, 0x33, 0x3F, 0x5E, 0x2E, 0x8E, 0xEA, 0x00, 0x74, 0x05, 0x52, 0x9A, 0x82, 0xA6, 0xAC, 0x23, 0x44, 0x4F, 0x3D, 0xC2, 0x76, 0x37, 0x80, 0xB1, 0xB9, 0xF4, 0x81, 0x9C, 0x32, 0xA1, 0xB9, 0x37, 0xC0, 0x7A, 0xBD, 0xDD, 0x7C, 0x3D, 0x6F, 0x66, 0x7C, 0x17, 0xB1, 0x1B, 0xFF, 0xB7, 0x72, 0x7F, 0x37, 0x38, 0x20, 0xD3, 0x74, 0x5F, 0x9B, 0x75, 0x3B, 0x68, 0x56, 0x91, 0x3E, 0x46, 0x9B, 0xFC, 0xED, 0x4E, 0x0E, 0x85, 0xA0, 0xCF, 0x18, 0xAC, 0xC0, 0x0E, 0xE1, 0x98, 0x63, 0x4D, 0xC1, 0x23, 0x04, 0x93, 0x21, 0x08, 0xF4, 0x39, 0x63, 0xDC, 0x8A, 0xF9, 0x1F, 0x5F, 0x83, 0x1E, 0x7B, 0x32, 0x7F, 0xE1, 0x5C, 0x51, 0xEA, 0xFA, 0xFE, 0x03, 0x0D, 0xAB, 0x7E, 0x05, 0x0A, 0x00, 0x78, 0xDA, 0x8B, 0x8E, 0x05, 0x00, 0x01, 0x15, 0x00, 0xB9, 0xBE, 0x00, 0xBC, 0x00, 0x02, 0x00, 0x00, 0x00, 0xAC, 0x00, 0x78, 0xDA, 0xBD, 0x92, 0x3D, 0x0E, 0xC2, 0x30, 0x0C, 0x46, 0xEF, 0xE2, 0xB9, 0xA2, 0x3B, 0x07, 0x60, 0xE4, 0x02, 0x08, 0x45, 0x6E, 0x62, 0x20, 0x6A, 0xFE, 0x48, 0x52, 0x18, 0x50, 0xEF, 0x4E, 0x22, 0x0A, 0xEA, 0x80, 0x00, 0x91, 0x2A, 0x5B, 0x1C, 0x7D, 0x7A, 0x7E, 0xB2, 0xBD, 0xBB, 0x81, 0xC3, 0x78, 0x82, 0x35, 0x60, 0x08, 0x14, 0x43, 0xCB, 0xAD, 0x89, 0x64, 0x62, 0x2B, 0x23, 0xE9, 0xD0, 0xD2, 0x79, 0x90, 0x4E, 0xE7, 0xDA, 0x29, 0x8C, 0xC4, 0x7A, 0xEB, 0x07, 0x23, 0xD8, 0x45, 0xF7, 0xEC, 0xE0, 0xED, 0x14, 0x63, 0xAF, 0x14, 0x7B, 0x9F, 0x62, 0x86, 0xAE, 0xAB, 0x2E, 0x7D, 0x29, 0x82, 0x06, 0x3C, 0x97, 0x22, 0xF5, 0x4B, 0xAF, 0x8D, 0x54, 0xB4, 0x45, 0x4D, 0xA9, 0xFA, 0x99, 0x03, 0x63, 0x53, 0x45, 0x59, 0xA0, 0xC6, 0x23, 0x89, 0x45, 0xB4, 0x27, 0x56, 0x89, 0x7A, 0x87, 0xBC, 0xFF, 0x6A, 0x9E, 0x43, 0x85, 0xC2, 0x19, 0x51, 0xC5, 0x73, 0xA1, 0x01, 0xCF, 0x51, 0xFF, 0x7A, 0x3F, 0x96, 0x14, 0xA4, 0xA0, 0x8F, 0xE6, 0x39, 0x50, 0x78, 0xC9, 0x4F, 0x44, 0x0D, 0xD3, 0xF2, 0xF9, 0xCE, 0x31, 0x30, 0xEE, 0xEF, 0x4C, 0xE3, 0x96, 0xFA, 0x0A, 0x00, 0x78, 0xDA, 0x8B, 0x8E, 0x05, 0x00, 0x01, 0x15, 0x00, 0xB9, 0xAF, 0x00, 0xBC, 0x00, 0x03, 0x00, 0x00, 0x00, 0x6B, 0x00, 0x78, 0xDA, 0x85, 0x8C, 0x3B, 0x0E, 0x83, 0x30, 0x10, 0x05, 0xAF, 0x82, 0xB6, 0x8E, 0x70, 0x9F, 0x03, 0xA4, 0xCC, 0x05, 0x10, 0xB2, 0xCC, 0x7A, 0x05, 0x2B, 0xFC, 0x13, 0xFB, 0x52, 0x45, 0xB9, 0x3B, 0xA6, 0x48, 0x4D, 0xF5, 0x66, 0x8A, 0x79, 0xD3, 0x97, 0x5A, 0xC0, 0x46, 0x4F, 0x0A, 0x66, 0x02, 0x73, 0x5C, 0x0B, 0xA4, 0xC0, 0x29, 0x24, 0x9B, 0xCB, 0x35, 0x9A, 0x6B, 0x6A, 0xA8, 0x69, 0x58, 0x0F, 0x6D, 0x7F, 0xB9, 0xD8, 0xB7, 0xEC, 0x57, 0xC6, 0x35, 0x08, 0x0C, 0x65, 0xBF, 0x2B, 0xC6, 0xE5, 0x53, 0x62, 0x12, 0x7A, 0xD0, 0xC1, 0x1A, 0xFB, 0x6D, 0xA7, 0x97, 0x26, 0x79, 0x87, 0x2C, 0xDD, 0x6E, 0x6A, 0xFA, 0xCD, 0x27, 0x7E, 0x81, 0x36, 0x35, 0x3C, 0x00, 0x78, 0xDA, 0x05, 0xC1, 0xC1, 0x11, 0x80, 0x30, 0x08, 0x04, 0xC0, 0x5E, 0x78, 0xFB, 0x38, 0xE0, 0x48, 0x4C, 0x2D, 0x8E, 0x0F, 0x43, 0xA0, 0xFF, 0x12, 0xDC, 0x7D, 0x24, 0x3A, 0x8A, 0xD0, 0xC9, 0xE9, 0x64, 0x5A, 0xB1, 0x47, 0xD2, 0x32, 0xE4, 0x92, 0x01, 0xF7, 0xCF, 0xCF, 0x5D, 0xC7, 0x0A, 0x81, 0xB5, 0x35, 0x7A, 0xC1, 0x55, 0xDE, 0x1F, 0x81, 0xCA, 0x0D, 0xC4, 0xB7, 0x00, 0xBC, 0x00, 0x04, 0x00, 0x00, 0x00, 0x8B, 0x00, 0x78, 0xDA, 0x95, 0x4E, 0x4B, 0x0A, 0x02, 0x31, 0x0C, 0xBD, 0x4B, 0xD6, 0x83, 0x45, 0x04, 0x17, 0x1E, 0xC0, 0xA5, 0x17, 0x10, 0x09, 0x9D, 0x36, 0x30, 0x61, 0xDA, 0x54, 0x9A, 0x8C, 0xA0, 0x32, 0x77, 0xB7, 0x05, 0x77, 0x6E, 0x9C, 0x4D, 0xDE, 0x07, 0xF2, 0xDE, 0xBB, 0xBE, 0xE1, 0xEE, 0x6D, 0x82, 0x13, 0x78, 0x55, 0x32, 0x75, 0xA1, 0x88, 0x91, 0x98, 0x63, 0xA3, 0xAC, 0x2E, 0x97, 0xD8, 0xCF, 0x22, 0xF6, 0x05, 0x9C, 0xE9, 0xD9, 0x4C, 0x54, 0xAB, 0x3C, 0x13, 0xB2, 0xC4, 0xA5, 0x53, 0x52, 0x3C, 0x36, 0x11, 0x26, 0xAC, 0x9E, 0x13, 0x2A, 0x05, 0xE3, 0x22, 0xBB, 0x71, 0x91, 0x98, 0x08, 0x06, 0xA8, 0x81, 0x63, 0xEB, 0x68, 0xEC, 0xCC, 0x89, 0x2E, 0x3E, 0x53, 0x53, 0xDB, 0x03, 0x61, 0x1D, 0xB6, 0xEE, 0x8D, 0xE5, 0x41, 0xD6, 0x23, 0x5E, 0x24, 0x6C, 0x38, 0xEE, 0x0F, 0x7F, 0xAD, 0xFA, 0x7D, 0x83, 0xF5, 0xF6, 0x01, 0x3D, 0xD4, 0x70, 0x65, 0x24, 0x00, 0x78, 0xDA, 0x8B, 0x56, 0x32, 0x4D, 0x49, 0xB3, 0xB0, 0x4C, 0x33, 0x4C, 0xB3, 0x30, 0x4B, 0x33, 0x37, 0x37, 0x31, 0x34, 0x32, 0x33, 0x36, 0x34, 0xB0, 0x30, 0x4F, 0x4D, 0x54, 0x8A, 0x05, 0x00, 0x6B, 0xBF, 0x07, 0x42, 0x36, 0x00, 0xBC, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x78, 0xDA, 0x8B, 0x8E, 0x05, 0x00, 0x01, 0x15, 0x00, 0xB9, 0x24, 0x00, 0x78, 0xDA, 0x8B, 0x56, 0x32, 0x33, 0x35, 0x37, 0x30, 0xB5, 0x48, 0x4B, 0x49, 0x49, 0xB3, 0x4C, 0x32, 0x36, 0x32, 0x36, 0x34, 0x31, 0x30, 0x48, 0xB5, 0x34, 0xB4, 0xB0, 0x50, 0x8A, 0x05, 0x00, 0x67, 0xAF, 0x07, 0x07, 0xB9, 0x00, 0xBC, 0x00, 0x06, 0x00, 0x00, 0x00, 0x8D, 0x00, 0x78, 0xDA, 0x8D, 0x8E, 0x31, 0x0E, 0xC2, 0x30, 0x10, 0x04, 0xFF, 0x72, 0x75, 0x84, 0x1B, 0xD2, 0xF0, 0x00, 0x4A, 0x3E, 0x80, 0x90, 0x75, 0xF1, 0x6D, 0x1C, 0x8B, 0xC4, 0x89, 0xEE, 0x1C, 0x1A, 0x94, 0xBF, 0x63, 0x2A, 0xA8, 0x20, 0xDD, 0x6C, 0xB1, 0xA3, 0xB9, 0x3E, 0x69, 0xE1, 0x32, 0xD0, 0x89, 0xD8, 0x0C, 0xC5, 0x5C, 0x98, 0x73, 0x41, 0x2E, 0x2E, 0x15, 0x4C, 0xE6, 0xA6, 0x59, 0xCC, 0x0D, 0x9C, 0x25, 0xAE, 0xAC, 0xDF, 0xE8, 0xF9, 0xEE, 0xDB, 0x63, 0xEB, 0x05, 0x96, 0x62, 0xF6, 0x0A, 0xF1, 0x03, 0xB8, 0x78, 0x8E, 0x0A, 0xB3, 0x59, 0x0F, 0xDD, 0x9A, 0x65, 0x04, 0x35, 0xA4, 0x21, 0x49, 0xD5, 0x57, 0x3A, 0xA7, 0x11, 0x17, 0x9E, 0x50, 0xD7, 0x6E, 0x0F, 0x6D, 0xCD, 0x8E, 0x42, 0x45, 0x48, 0x78, 0x40, 0x3F, 0xF4, 0xF6, 0xF6, 0xDC, 0x55, 0x6F, 0x8F, 0x1C, 0xE0, 0x17, 0x09, 0x7F, 0x92, 0x7E, 0x3C, 0x69, 0xBB, 0xBD, 0x00, 0x10, 0xC8, 0x6C, 0x32, 0x24, 0x00, 0x78, 0xDA, 0x8B, 0x56, 0x32, 0x4D, 0x31, 0x4C, 0x33, 0x35, 0xB3, 0x30, 0xB1, 0x30, 0x4B, 0x33, 0x37, 0x37, 0x31, 0x49, 0x4A, 0x4E, 0x34, 0x4E, 0x33, 0x48, 0xB2, 0xB4, 0x50, 0x8A, 0x05, 0x00, 0x6A, 0x11, 0x07, 0x70}
	// bigData := []byte{0x07, 0x00, 0x00, 0x00, 0x96, 0x00, 0x78, 0xDA, 0x8D, 0x8F, 0x4D, 0x0A, 0xC2, 0x40, 0x0C, 0x46, 0xEF, 0x92, 0x75, 0x71, 0x44, 0x71, 0xE3, 0x01, 0x5C, 0x7A, 0x01, 0x91, 0x30, 0xCE, 0x44, 0x1A, 0x3B, 0x3F, 0x65, 0x92, 0x71, 0x23, 0xBD, 0xBB, 0x23, 0x74, 0x59, 0x69, 0x57, 0x5F, 0x02, 0xDF, 0xCB, 0x23, 0xB7, 0x0F, 0x8C, 0x56, 0x7B, 0x38, 0x83, 0x15, 0x21, 0x15, 0xE3, 0x72, 0x52, 0x4A, 0x6A, 0x58, 0x29, 0x8A, 0x89, 0xD9, 0x8B, 0x11, 0xCD, 0x6E, 0x98, 0x03, 0xE3, 0x78, 0xC2, 0x7E, 0x40, 0x7B, 0x44, 0x51, 0xBF, 0x7B, 0xD4, 0xE4, 0x03, 0x41, 0x07, 0xC5, 0xB1, 0x6F, 0x47, 0xDA, 0x74, 0xE1, 0x40, 0x57, 0x1B, 0xA9, 0x6D, 0x0B, 0x04, 0x4C, 0xDD, 0x06, 0x63, 0xCC, 0x35, 0xE9, 0x1C, 0x3F, 0x36, 0x3E, 0x19, 0x6B, 0xE2, 0x37, 0x15, 0xB1, 0x61, 0x45, 0xBA, 0x0C, 0x6D, 0xF3, 0x8A, 0xCB, 0x23, 0xCD, 0x81, 0x36, 0x04, 0xD4, 0xC2, 0x2F, 0x6E, 0x45, 0x94, 0x22, 0xB8, 0x3F, 0xAC, 0xFD, 0xFB, 0x8F, 0x83, 0xE9, 0xFE, 0x05, 0x5D, 0x05, 0x82, 0x7D, 0x24, 0x00, 0x78, 0xDA, 0x8B, 0x56, 0x32, 0x4D, 0x31, 0x4C, 0x33, 0x35, 0x4B, 0x33, 0xB4, 0x30, 0x4B, 0x33, 0x37, 0x37, 0x31, 0x49, 0x4A, 0x4E, 0x32, 0x48, 0x4C, 0x4E, 0x31, 0x4C, 0x54, 0x8A, 0x05, 0x00, 0x6E, 0xD5, 0x07, 0xEA}
	// bigData := []byte{0x08, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x78, 0xDA, 0xAD, 0x8E, 0xB1, 0x0A, 0xC3, 0x30, 0x10, 0x43, 0xFF, 0xE5, 0xE6, 0x50, 0xEF, 0xFD, 0x80, 0x8E, 0xFD, 0x81, 0x50, 0xCC, 0x39, 0x11, 0xD4, 0x70, 0x39, 0x07, 0xDF, 0x85, 0x0C, 0x25, 0xFF, 0x5E, 0x87, 0x94, 0x4C, 0x5D, 0x0A, 0x5D, 0x84, 0x24, 0x78, 0x42, 0xFD, 0x8B, 0x66, 0xF6, 0x27, 0x5D, 0x89, 0xCD, 0xE0, 0x16, 0x86, 0xA2, 0x0E, 0xF5, 0xB0, 0x82, 0xE7, 0xA2, 0x16, 0x16, 0xE3, 0x24, 0x88, 0xD9, 0x31, 0x59, 0xD8, 0x35, 0xA6, 0xE2, 0x2E, 0x38, 0xFC, 0xCA, 0x8E, 0xFA, 0x69, 0xA2, 0x94, 0xE2, 0x97, 0xB4, 0xE8, 0x28, 0xA0, 0x8E, 0xEA, 0x90, 0xC7, 0x36, 0xDB, 0xDC, 0x2D, 0x0B, 0xEE, 0x3C, 0xA1, 0xA5, 0xEF, 0x10, 0x6D, 0xDD, 0x1F, 0x6F, 0xEC, 0x28, 0x67, 0x45, 0xFD, 0xF9, 0xCB, 0x49, 0xD2, 0xF6, 0x78, 0x03, 0xFC, 0x45, 0x68, 0xFD, 0x0A, 0x00, 0x78, 0xDA, 0x8B, 0x8E, 0x05, 0x00, 0x01, 0x15, 0x00, 0xB9, 0xAB, 0x00, 0xBC, 0x00, 0x09, 0x00, 0x00, 0x00, 0x99, 0x00, 0x78, 0xDA, 0xAD, 0x8E, 0x3D, 0x0E, 0xC2, 0x30, 0x0C, 0x46, 0xEF, 0xE2, 0xB9, 0x10, 0x2A, 0x60, 0xE1, 0x00, 0x8C, 0x5C, 0x00, 0xA1, 0xC8, 0x49, 0x2C, 0x11, 0x35, 0x3F, 0x95, 0x9D, 0xC2, 0x80, 0x7A, 0x77, 0x52, 0x21, 0x58, 0x28, 0x42, 0x48, 0x2C, 0xFE, 0xFC, 0x0D, 0xCF, 0x7E, 0xC7, 0x1B, 0xF4, 0x58, 0xCE, 0xB0, 0x03, 0x14, 0xA1, 0x22, 0xCA, 0xE6, 0x54, 0x28, 0x15, 0xE5, 0x0B, 0x45, 0x51, 0x31, 0x3B, 0x51, 0x06, 0x99, 0x29, 0x3C, 0x53, 0x47, 0xDE, 0xAC, 0x69, 0xD1, 0x5A, 0xBD, 0x6D, 0x57, 0x31, 0x2E, 0xCD, 0x90, 0x5C, 0x20, 0x68, 0x80, 0xAD, 0x77, 0xF5, 0x4E, 0xDD, 0xF6, 0x3E, 0xD0, 0x01, 0x23, 0xD5, 0x36, 0xCB, 0xC0, 0xD8, 0x7C, 0x7A, 0x7B, 0x25, 0xEC, 0x73, 0x12, 0x35, 0x08, 0x9A, 0x40, 0xFA, 0x61, 0x31, 0x4D, 0xED, 0xD8, 0xA7, 0x4E, 0x77, 0x17, 0x7C, 0xEB, 0x3A, 0xE4, 0x5C, 0xBE, 0x78, 0xCC, 0x21, 0xFF, 0xD6, 0x98, 0x60, 0xF4, 0x89, 0xF8, 0x47, 0x97, 0x17, 0x07, 0xE3, 0xE9, 0x0E, 0xC5, 0x4E, 0x90, 0xD8, 0x0A, 0x00, 0x78, 0xDA, 0x8B, 0x8E, 0x05, 0x00, 0x01, 0x15, 0x00, 0xB9, 0xB2, 0x00, 0xBC, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x78, 0xDA, 0x8B, 0xAE, 0x56, 0x2A, 0x48, 0x2C, 0xC9, 0x50, 0xB2, 0x52, 0x4A, 0x2C, 0x2E, 0x4E, 0x2D, 0x29, 0xD6, 0x4F, 0xCE, 0xCF, 0x2B, 0x49, 0xCD, 0x2B, 0xD1, 0xCF, 0x2C, 0x49, 0xCD, 0x2D, 0xD6, 0xCF, 0xCD, 0x4F, 0x29, 0xD6, 0x4F, 0x4A, 0x2C, 0x2A, 0x4A, 0xCD, 0x81, 0xD1, 0xF1, 0x89, 0x45, 0x86, 0xA6, 0xF1, 0xA6, 0x06, 0x16, 0xB9, 0xB9, 0x7A, 0x49, 0xA5, 0x79, 0x29, 0x39, 0xA9, 0x4A, 0x3A, 0x4A, 0x45, 0xC9, 0x99, 0x29, 0x40, 0x33, 0x80, 0x2C, 0xB7, 0xCC, 0x9C, 0x54, 0xBF, 0xC4, 0xDC, 0x54, 0x20, 0x0F, 0x43, 0xBD, 0x52, 0x6D, 0x2C, 0x00, 0xC3, 0x70, 0x26, 0x4C, 0x4B, 0x00, 0x78, 0xDA, 0x0D, 0xC9, 0xB9, 0x15, 0x80, 0x40, 0x08, 0x00, 0xD1, 0x5E, 0x88, 0x0D, 0x38, 0xE4, 0xD8, 0x5A, 0x7C, 0x06, 0x08, 0x4B, 0xFF, 0x25, 0xB8, 0xE1, 0xFC, 0x79, 0xC0, 0x38, 0x2B, 0x2D, 0x49, 0x08, 0xB7, 0xB9, 0x85, 0x26, 0x4F, 0xF1, 0x76, 0xB8, 0x40, 0xA7, 0x65, 0xAF, 0x71, 0xFA, 0x5C, 0xD4, 0x29, 0x8A, 0xB5, 0x7A, 0x4D, 0x9C, 0x65, 0xA7, 0x2B, 0xFB, 0xAE, 0x30, 0x97, 0x41, 0xE4, 0x85, 0xA3, 0x07, 0xE1, 0xFD, 0x01, 0x7A, 0xE1, 0x15, 0x14}
	// bigData := []byte{0x0B, 0x00, 0x00, 0x00, 0xA3, 0x00, 0x78, 0xDA, 0x8D, 0x8E, 0x41, 0x0A, 0xC2, 0x30, 0x10, 0x45, 0xEF, 0x32, 0xEB, 0x62, 0x44, 0x45, 0xC1, 0x03, 0xB8, 0x74, 0xE7, 0x4A, 0x4A, 0x98, 0x26, 0x83, 0x0D, 0x36, 0x49, 0xC9, 0x4C, 0xA5, 0x28, 0xBD, 0xBB, 0xA1, 0x2E, 0x54, 0xC4, 0xEA, 0xEE, 0x0F, 0xC3, 0xFB, 0xEF, 0x1F, 0x6F, 0xD0, 0xA2, 0xD4, 0xB0, 0x05, 0x64, 0x26, 0x61, 0x65, 0x62, 0x10, 0x0A, 0xA2, 0x9C, 0x90, 0x67, 0xE5, 0xA3, 0x65, 0xC5, 0xAE, 0xA1, 0x60, 0x28, 0x3D, 0x93, 0xF6, 0xED, 0x46, 0x57, 0xA2, 0x53, 0x14, 0xEA, 0xF5, 0x42, 0xAF, 0xD6, 0xFD, 0x72, 0x3E, 0xAB, 0xBA, 0x60, 0x1B, 0x82, 0x02, 0x92, 0x71, 0x36, 0x37, 0xE6, 0xB4, 0xCB, 0xC0, 0x1E, 0x3D, 0xE5, 0x6B, 0x92, 0x85, 0xA1, 0xF8, 0x63, 0x88, 0xC7, 0x13, 0x5E, 0x5D, 0xA0, 0x31, 0x8D, 0x3D, 0xF5, 0x59, 0xB3, 0xD8, 0x47, 0x87, 0xFE, 0x39, 0xE1, 0x0B, 0x35, 0x21, 0xC7, 0xCE, 0xBA, 0xA8, 0xDA, 0x3A, 0x21, 0x67, 0x6B, 0xC7, 0x64, 0xF2, 0xE2, 0x4B, 0x74, 0x86, 0x3E, 0x54, 0x87, 0xF1, 0xF9, 0x2E, 0x7C, 0x05, 0x60, 0x28, 0xEF, 0x14, 0xAE, 0x7F, 0x17, 0x4B, 0x00, 0x78, 0xDA, 0x0D, 0xC9, 0xB1, 0x15, 0x80, 0x30, 0x08, 0x05, 0xC0, 0x5D, 0x52, 0x5B, 0x40, 0xE0, 0x13, 0x99, 0xC5, 0x67, 0x11, 0x02, 0xEC, 0x3F, 0x82, 0x5E, 0x7B, 0xCF, 0x40, 0x67, 0xC0, 0x41, 0x8D, 0x69, 0xBA, 0xCD, 0x18, 0x94, 0x7C, 0xAC, 0xC6, 0x35, 0x8C, 0x44, 0xB6, 0xA0, 0x6F, 0xDA, 0x85, 0x9A, 0xED, 0x8B, 0x62, 0x5B, 0xC4, 0x5F, 0x48, 0x6E, 0x38, 0xE9, 0x6D, 0xBD, 0x96, 0x6A, 0x9C, 0x64, 0x51, 0x78, 0x8D, 0xF7, 0x03, 0x6E, 0x2A, 0x15, 0x36}

	bigData := []byte{0x01, 0x00, 0x00, 0x00, 0x63, 0x00, 0x78, 0xDA, 0x8B, 0xAE, 0x56, 0x2A, 0x48, 0x2C, 0xC9, 0x50, 0xB2, 0x52, 0x4A, 0x2C, 0x2E, 0x4E, 0x2D, 0x29, 0xD6, 0x4F, 0xCE, 0xCF, 0x2B, 0x49, 0xCD, 0x2B, 0xD1, 0xCF, 0x2C, 0x49, 0xCD, 0x2D, 0xD6, 0xCF, 0xCD, 0x4F, 0x29, 0xD6, 0x4F, 0x4A, 0x2C, 0x2A, 0x4A, 0xCD, 0x81, 0xD1, 0xF1, 0xB9, 0x45, 0x26, 0xC6, 0xA9, 0xBA, 0x86, 0xC9, 0xF1, 0xA6, 0x86, 0x06, 0xB9, 0xB9, 0x7A, 0x49, 0xA5, 0x79, 0x29, 0x39, 0xA9, 0x4A, 0x3A, 0x4A, 0x45, 0xC9, 0x99, 0x29, 0x40, 0x73, 0x80, 0x2C, 0xB7, 0xCC, 0x9C, 0x54, 0xBF, 0xC4, 0xDC, 0x54, 0x20, 0x0F, 0xAB, 0x1E, 0xA5, 0xDA, 0x58, 0x00, 0xFB, 0xDF, 0x28, 0xA4, 0x0A, 0x00, 0x78, 0xDA, 0x8B, 0x8E, 0x05, 0x00, 0x01, 0x15, 0x00, 0xB9}
	buffer := bytes.NewBuffer(bigData)
	testPacket := &response.NightMare{}
	err := testPacket.Deserialize(buffer)
	if err != nil {
		panic(err)
	}
	testPacket.DebugPrintAll()

	// buffer := bytes.NewBuffer(bigData)
	// // testPacket.DebugPrintAll()
	// var commandId uint32
	// var netId uint32
	// err := helpers.ReadPackedUInt32(buffer, &commandId)
	// if err != nil {
	// 	panic(err)
	// }
	// err = helpers.ReadPackedUInt32(buffer, &netId)
	// if err != nil {
	// 	panic(err)
	// }

	// fmt.Printf("CommandId: %d\n", commandId)
	// fmt.Printf("NetId: %d\n", netId)

	// rpcCmd, success := rpc.GetRPCCommand(int(commandId))
	// if !success {
	// 	fmt.Printf("Failed to get rpc command with id: %d\n", commandId)
	// 	panic("Failed to get rpc command")
	// }
	// rpcCmd.Deserialize(buffer)

	// rpcCmd = &response.PacketRpcResponse{
	// 	CmdId: 547040626,
	// 	NetId: 1,
	// 	Command: &rpc.RpcSyncGameTime{
	// 		Time: uint64(helpers.TimeToInt64(time.Now().Add(20 * time.Second))),
	// 	},
	// }

	// resp := &models.DataPacket{
	// 	GamePacketType: 2,
	// 	GamePacket:     rpcCmd,
	// }
	// buf := resp.Write()[4:]
	// newBuf := bytes.NewBuffer(buf)

	// err = helpers.ReadPackedUInt32(newBuf, &commandId)
	// if err != nil {
	// 	panic(err)
	// }
	// err = helpers.ReadPackedUInt32(newBuf, &netId)
	// if err != nil {
	// 	panic(err)
	// }

	// fmt.Printf("CommandId: %d\n", commandId)
	// fmt.Printf("NetId: %d\n", netId)

	// rpcCmd, success = rpc.GetRPCCommand(int(commandId))
	// if !success {
	// 	fmt.Printf("Failed to get rpc command with id: %d\n", commandId)
	// 	panic("Failed to get rpc command")
	// }
	// rpcCmd.Deserialize(newBuf)
	// fmt.Printf("RpcCmd: %+v\n", rpcCmd)
}
